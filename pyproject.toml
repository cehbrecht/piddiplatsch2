[build-system]
requires = ["flit_core >=3.9,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "piddiplatsch"
version = "0.1.0"
description = "A Kafka consumer for CMIP6+ records with Handle Service integration"
authors = [
    { name = "Carsten Ehbrecht", email = "ehbrecht@dkrz.de" }
]
requires-python = ">=3.10"
license = {file = "LICENSE"}
dependencies = [
    "click",
    "flask",
    "confluent-kafka >=2.9.0",
    "pyhandle >=1.4.1",
    "colorlog",
    "toml",
    "requests",
    "pluggy",
    "jsonschema",
    "pydantic >=2.11",
    "python-dateutil"
]

[project.optional-dependencies]
dev = [
  "pip >=24.2.0",
  "flit >=3.9.0,<4.0",
  "ipython>=8.13.0",
  "pytest >=8.0.0",
  "ruff >=0.5.7",
  "twine >=4.0.0",
  "wheel >=0.40.0"
]

[project.scripts]
piddiplatsch = "piddiplatsch.cli:cli"

[tool.flit.module]
name = "piddiplatsch"

[tool.flit.sdist]
include = [
  ".zenodo.json",
  "AUTHORS.md",
  "CHANGES.md",
  "CONTRIBUTING.md",
  "LICENSE",
  "Makefile",
  "README.md",
  "environment.yml",
  "environment-dev.yml",
  "environment-docs.yml",
  "docs/_static/_images/*.gif",
  "docs/_static/_images/*.jpg",
  "docs/_static/_images/*.png",
  "docs/_static/_images/*.rst",
  "docs/Makefile",
  "docs/conf.py",
  "docs/make.bat",
  "src/piddiplatsch",
  "tests/*.py",
  "tox.ini"
]
exclude = [
  "*.py[co]",
  "__pycache__",
  ".codacy.yml",
  ".dockerignore",
  ".editorconfig",
  ".gitignore",
  ".pre-commit-config.yaml",
  ".readthedocs.yml",
  ".yamllint.yaml",
  "Dockerfile",
  "docker-compose.yml",
  "docs/_*"
]

[tool.ruff]
src = ["rook"]
line-length = 150
exclude = [
  ".eggs",
  ".git",
  "build",
  "docs"
]

[tool.ruff.format]
line-ending = "auto"

[tool.ruff.lint]
preview = true
ignore = [
  "BLE001", # Do not catch blind exception: `Exception`
  "RUF100", # Unused blanket `noqa` directive
  "B904", # raise exceptions with `raise ... from err`
  "PERF203", # `try`-`except` within a loop incurs performance overhead
  "G004", # Logging statement uses f-string
  "S110", # `try`-`except`-`pass` detected, consider logging the exception
  "S112", # `try`-`except`-`continue` detected, consider logging the exception
  "C408", # Unnecessary `dict()` call (rewrite as a literal)
  "C419", # Unnecessary list comprehension
]
select = [
  "BLE", # blind-except
  # "D", # docstrings
  "E", # pycodestyle errors
  "F", # pyflakes errors
  "RUF", # ruff checks
  "UP", # python version conventions
  "W", # pycodestyle warnings
  "B", # flake8-bugbear
  "N", # naming conventions
  "G", # logging-format
  "C", # complexity
  "PTH", # pathlib
  "FLY", # modernizing string formatting
  "PERF", # iterator performance
  "S", # bandit security
]
extend-select = [
]

[tool.ruff.lint.flake8-bandit]
check-typed-exception = true

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra"
testpaths = ["tests"]
markers = [
    "online: mark test that requires running Kafka and handle server"
]


# pluggy plugins
[project.entry-points.piddiplatsch]
cmip6 = "piddiplatsch.plugins.cmip6_processor:CMIP6Processor"
